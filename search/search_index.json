{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Pr\u00e9sentation \u2693\ufe0e 1. Introduction \u2693\ufe0e Charles POULMAIRE, enseignant de Math\u00e9matiques et de NSI dans l'Acad\u00e9mie de Versailles. Pr\u00e9sident de l'AEIF. Gilles LASSUS, enseignant de Math\u00e9matiques et de NSI dans l'Acad\u00e9mie de Bordeaux. Membres de l' Association des Enseignantes et enseignants d'Informatique de France . 2. Le partage, le partage, le partage \u2693\ufe0e D\u00e9clararation pr\u00e9alable La solution que nous allons pr\u00e9senter implique le d\u00e9p\u00f4t de nos ressources dans une forge ouverte . N'importe qui peut donc venir voir les documents, consulter les sources, et ainsi modifier et am\u00e9liorer le contenu. Il n'y a pas de section priv\u00e9e. Le contenu est souvent d\u00e9clar\u00e9 en licence Creative Commons. (CC BY-SA en ce qui nous concerne) 3. Un site, mais \u00e0 quel prix technique ? \u2693\ufe0e Partis pris techniques Nous ne souhaitons pas : \u00e9crire int\u00e9gralement un site en html / JavaScript : trop complexe ! utiliser de CMS (comme Wordpress) : pas assez de contr\u00f4le sur le contenu, et partage des sources difficile. Nous souhaitons : pouvoir nous concentrer uniquement sur le contenu p\u00e9dagogique. une courbe d'apprentissage rapide du langage. nous \u00e9crirons notre contenu en Markdown . Le logiciel MkDocs se chargera ensuite de construire le site qui affichera notre contenu. 4. Exemples de sites utilisant Mkdocs \u2693\ufe0e https://squidfunk.github.io/mkdocs-material/getting-started/ https://e-nsi.forge.aeif.fr/pratique/ https://ericecmorlaix.github.io/adn-Tutoriel_site_web/MarkDown-Mkdocs_Material/#fichier-md https://glassus.github.io/terminale_nsi/ 5. MkDocs ? \u2693\ufe0e MkDocs est un logiciel libre permettant de g\u00e9n\u00e9rer des sites de documentation d'autres logiciels. Nous allons utiliser un th\u00e8me particulier pour MkDocs, nomm\u00e9 Material for MkDocs , d\u00e9velopp\u00e9 et maintenu par Martin Donath . Le principe fondamental de cette technologie est de permettre \u00e0 l'utilisateur de r\u00e9diger uniquement ses pages en Markdown , sans avoir \u00e0 \u00e9crire de html . Le Markdown \u00e9tant un langage de description tr\u00e8s facile d'acc\u00e8s et d'utilisation, il est possible de se concentrer uniquement sur le fond, laissant \u00e0 MkDocs le soin de g\u00e9rer la forme. 6. Ouvrons le capot : quel code pour quel r\u00e9sultat ? \u2693\ufe0e 6.1 Exemple d'une portion de site \u2693\ufe0e 6.2 Le code en Markdown ayant g\u00e9n\u00e9r\u00e9 cette portion de site \u2693\ufe0e ### 3.2 pi\u00e8ge n\u00b02 : ne JAMAIS ENTRER dans la boucle !!! bug \"Exemple fondateur n\u00b03 :heart:\" Le programme suivant : ```python linenums='1' a = 0 while a > 10: print(\"ce texte non plus ne s'\u00e9crira jamais\") a = a + 1 print(\"fini\") ``` va \u00e9crire ```fini``` et s'arr\u00eater. !!! example \"Exercice 1\" === \"\u00c9nonc\u00e9\" Trouver le plus petit nombre entier $n$ tel que $2^n$ soit sup\u00e9rieur \u00e0 1 milliard. === \"Correction\" ```python linenums='1' n = 1 while 2**n < 10**9: n = n + 1 print(\"trop petit\") print(\"trouv\u00e9 : \",n) ``` 7. De multiples extensions et possibilit\u00e9s \u2693\ufe0e Le mot d'ordre de la solution MkDocs est la simplicit\u00e9 . Il est toutefois possible de rajouter de multiples fonctionnalit\u00e9s (qui rendront peut-\u00eatre le code de moins en moins simple). 7.1 Prise en charge du Latex. \u2693\ufe0e Aucun probl\u00e8me et aucune lourdeur dans la syntaxe, il suffit d'encadrer son code de $... comme en \\(\\LaTeX\\) ! 7.2 Console Python \u2693\ufe0e Une \u00e9diteur Python peut \u00eatre int\u00e9gr\u00e9 tr\u00e8s facilement : \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f Il n\u00e9cessite la pr\u00e9sence de fichiers particuliers (javascript, css) dans l'arborescence de votre site. 7.2 Int\u00e9gration d'iframe \u2693\ufe0e \u00c0 l'int\u00e9rieur du Markdown, il est possible d'\u00e9crire du html et donc d'int\u00e9grer des iframes... mais le code n'est plus tr\u00e8s simple et on se retrouve \u00e0 faire ce qu'on a voulu \u00e9viter : du hmtl !! Exemple d'int\u00e9gration Rendu Code utilis\u00e9 Regardez cette belle animation GeoGebra : Regardez cette belle animation GeoGebra : <iframe src=\"https://www.geogebra.org/classic/ahavfqve?embed\" width=\"800\" height=\"600\" allowfullscreen style=\"border: 1px solid #e4e4e4;border-radius: 4px;\" frameborder=\"0\"></iframe>","title":"Pr\u00e9sentation"},{"location":"#presentation","text":"","title":"Pr\u00e9sentation"},{"location":"#1-introduction","text":"Charles POULMAIRE, enseignant de Math\u00e9matiques et de NSI dans l'Acad\u00e9mie de Versailles. Pr\u00e9sident de l'AEIF. Gilles LASSUS, enseignant de Math\u00e9matiques et de NSI dans l'Acad\u00e9mie de Bordeaux. Membres de l' Association des Enseignantes et enseignants d'Informatique de France .","title":"1. Introduction"},{"location":"#2-le-partage-le-partage-le-partage","text":"D\u00e9clararation pr\u00e9alable La solution que nous allons pr\u00e9senter implique le d\u00e9p\u00f4t de nos ressources dans une forge ouverte . N'importe qui peut donc venir voir les documents, consulter les sources, et ainsi modifier et am\u00e9liorer le contenu. Il n'y a pas de section priv\u00e9e. Le contenu est souvent d\u00e9clar\u00e9 en licence Creative Commons. (CC BY-SA en ce qui nous concerne)","title":"2. Le partage, le partage, le partage"},{"location":"#3-un-site-mais-a-quel-prix-technique","text":"Partis pris techniques Nous ne souhaitons pas : \u00e9crire int\u00e9gralement un site en html / JavaScript : trop complexe ! utiliser de CMS (comme Wordpress) : pas assez de contr\u00f4le sur le contenu, et partage des sources difficile. Nous souhaitons : pouvoir nous concentrer uniquement sur le contenu p\u00e9dagogique. une courbe d'apprentissage rapide du langage. nous \u00e9crirons notre contenu en Markdown . Le logiciel MkDocs se chargera ensuite de construire le site qui affichera notre contenu.","title":"3. Un site, mais \u00e0 quel prix technique ?"},{"location":"#4-exemples-de-sites-utilisant-mkdocs","text":"https://squidfunk.github.io/mkdocs-material/getting-started/ https://e-nsi.forge.aeif.fr/pratique/ https://ericecmorlaix.github.io/adn-Tutoriel_site_web/MarkDown-Mkdocs_Material/#fichier-md https://glassus.github.io/terminale_nsi/","title":"4. Exemples de sites utilisant Mkdocs"},{"location":"#5-mkdocs","text":"MkDocs est un logiciel libre permettant de g\u00e9n\u00e9rer des sites de documentation d'autres logiciels. Nous allons utiliser un th\u00e8me particulier pour MkDocs, nomm\u00e9 Material for MkDocs , d\u00e9velopp\u00e9 et maintenu par Martin Donath . Le principe fondamental de cette technologie est de permettre \u00e0 l'utilisateur de r\u00e9diger uniquement ses pages en Markdown , sans avoir \u00e0 \u00e9crire de html . Le Markdown \u00e9tant un langage de description tr\u00e8s facile d'acc\u00e8s et d'utilisation, il est possible de se concentrer uniquement sur le fond, laissant \u00e0 MkDocs le soin de g\u00e9rer la forme.","title":"5. MkDocs ?"},{"location":"#6-ouvrons-le-capot-quel-code-pour-quel-resultat","text":"","title":"6. Ouvrons le capot : quel code pour quel r\u00e9sultat ?"},{"location":"#61-exemple-dune-portion-de-site","text":"","title":"6.1 Exemple d'une portion de site"},{"location":"#62-le-code-en-markdown-ayant-genere-cette-portion-de-site","text":"### 3.2 pi\u00e8ge n\u00b02 : ne JAMAIS ENTRER dans la boucle !!! bug \"Exemple fondateur n\u00b03 :heart:\" Le programme suivant : ```python linenums='1' a = 0 while a > 10: print(\"ce texte non plus ne s'\u00e9crira jamais\") a = a + 1 print(\"fini\") ``` va \u00e9crire ```fini``` et s'arr\u00eater. !!! example \"Exercice 1\" === \"\u00c9nonc\u00e9\" Trouver le plus petit nombre entier $n$ tel que $2^n$ soit sup\u00e9rieur \u00e0 1 milliard. === \"Correction\" ```python linenums='1' n = 1 while 2**n < 10**9: n = n + 1 print(\"trop petit\") print(\"trouv\u00e9 : \",n) ```","title":"6.2 Le code en Markdown ayant g\u00e9n\u00e9r\u00e9 cette portion de site"},{"location":"#7-de-multiples-extensions-et-possibilites","text":"Le mot d'ordre de la solution MkDocs est la simplicit\u00e9 . Il est toutefois possible de rajouter de multiples fonctionnalit\u00e9s (qui rendront peut-\u00eatre le code de moins en moins simple).","title":"7. De multiples extensions et possibilit\u00e9s"},{"location":"#71-prise-en-charge-du-latex","text":"Aucun probl\u00e8me et aucune lourdeur dans la syntaxe, il suffit d'encadrer son code de $... comme en \\(\\LaTeX\\) !","title":"7.1 Prise en charge du Latex."},{"location":"#72-console-python","text":"Une \u00e9diteur Python peut \u00eatre int\u00e9gr\u00e9 tr\u00e8s facilement : \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f Il n\u00e9cessite la pr\u00e9sence de fichiers particuliers (javascript, css) dans l'arborescence de votre site.","title":"7.2 Console Python"},{"location":"#72-integration-diframe","text":"\u00c0 l'int\u00e9rieur du Markdown, il est possible d'\u00e9crire du html et donc d'int\u00e9grer des iframes... mais le code n'est plus tr\u00e8s simple et on se retrouve \u00e0 faire ce qu'on a voulu \u00e9viter : du hmtl !! Exemple d'int\u00e9gration Rendu Code utilis\u00e9 Regardez cette belle animation GeoGebra : Regardez cette belle animation GeoGebra : <iframe src=\"https://www.geogebra.org/classic/ahavfqve?embed\" width=\"800\" height=\"600\" allowfullscreen style=\"border: 1px solid #e4e4e4;border-radius: 4px;\" frameborder=\"0\"></iframe>","title":"7.2 Int\u00e9gration d'iframe"},{"location":"AEIF/AEIF/","text":"L'Association des Enseignants d'Informatique de France \u2693\ufe0e https://aeif.fr/","title":"L'Association des Enseignants d'Informatique de France"},{"location":"AEIF/AEIF/#lassociation-des-enseignants-dinformatique-de-france","text":"https://aeif.fr/","title":"L'Association des Enseignants d'Informatique de France"},{"location":"Git/feuille1/","text":"Prise en main de Git \u2693\ufe0e TODO : ins\u00e9rer le travail de Charles","title":"Prise en main de Git"},{"location":"Git/feuille1/#prise-en-main-de-git","text":"TODO : ins\u00e9rer le travail de Charles","title":"Prise en main de Git"},{"location":"Tutoriel/tutoriel/","text":"Cr\u00e9er et h\u00e9berger son propre site \u2693\ufe0e 1. Pr\u00e9paration de l'installation \u2693\ufe0e 1.1. Les pr\u00e9-requis \u2693\ufe0e Pr\u00e9-requis logiciels et packages Python Les logiciels suivants sont n\u00e9cessaires : Git VisualStudioCode (ou son \u00e9quivalent libre VSCodium ) Une version r\u00e9cente de Python doit \u00e9galement \u00eatre install\u00e9e. Les packages Python mkdocs-material , mkdocs-macros-plugin , mkdocs-awesome-pages-plugin , mkdocs-git-revision-date-localized-plugin doivent ensuite \u00eatre install\u00e9s, par exemple par les commandes : pip install mkdocs - material mkdocs - macros - plugin mkdocs - awesome - pages - plugin mkdocs - git - revision - date - localized - plugin 1.2. H\u00e9bergement des pages \u2693\ufe0e Dans nos exemples, les pages sont h\u00e9berg\u00e9es chez GitHub , chez qui la cr\u00e9ation d'un compte est donc n\u00e9cessaire. Toutefois, une alternative libre existe et propose un service \u00e9quivalent : GitLab : 2. Cr\u00e9ation d'un nouveau d\u00e9p\u00f4t \u2693\ufe0e La m\u00e9thode pr\u00e9sent\u00e9e ci-dessous va consister \u00e0 cloner ( forker ) un d\u00e9p\u00f4t d\u00e9j\u00e0 existant, contenant la structure minimale d'un site en MkDocs. Ce site minimal est visible \u00e0 l'adresse https://nsi-mauriac.github.io/mkdocs-modele/ . 2.1 Sur GitHub.com : fork du site mod\u00e8le \u2693\ufe0e Connectez-vous sur GitHub . Allez \u00e0 l'adresse https://github.com/NSI-Mauriac/mkdocs-modele et cliquer sur le bouton Fork en haut \u00e0 droite. Choisissez un nouveau nom pour votre d\u00e9p\u00f4t (votre repository ). 2.2 Sur votre ordinateur : clonage de votre d\u00e9p\u00f4t \u2693\ufe0e Sur la page d'accueil de votre d\u00e9p\u00f4t GitHub, cliquez sur le bouton vert Code et copiez l'adresse affich\u00e9e, qui doit ressembler \u00e0 https://github.com/<username>/<nomdud\u00e9pot>.git . Sur votre ordinateur, ouvrez un Terminal et tapez la commande git clone https://github.com/<username>/<nomdud\u00e9pot>.git (vous pouvez y coller votre adresse par Ctrl-Maj-V ). Cette commande va permettre de rapatrier sur votre disque dur votre d\u00e9p\u00f4t, pour l'instant uniquement pr\u00e9sent sur les serveurs de GitHub. 3. Visualisation du site en local \u2693\ufe0e Ouvrez dans VisualStudioCode le dossier de votre d\u00e9p\u00f4t. Dans Terminal, cliquez sur Nouveau terminal pour faire appara\u00eetre un nouveau terminal Dans ce terminal, placez vous dans le r\u00e9pertoire de votre d\u00e9p\u00f4t. Tapez la commande mkdocs serve . Un serveur se lance et votre page devient normalement visible dans votre navigateur \u00e0 l'adresse http://127.0.0.1:8000/ . 4. H\u00e9bergement du site sur les serveurs de GitHub : activation des GitHub Pages \u2693\ufe0e Toujours en local, dans un Terminal de VSC, tapez la commande mkdocs gh-deploy . Cette commande, qui ne sera r\u00e9alis\u00e9e qu'une seule fois, permet de g\u00e9n\u00e9rer toute l'architecture de votre site pour son d\u00e9ploiement sur les pages de GitHub . Elle sera faite automatiquement par la suite sur les serveurs de GitHub \u00e0 chaque modification de vos pages. Connectez-vous sur GitHub et allez sur la page d'accuil de votre d\u00e9p\u00f4t. Cliquez sur Settings , puis dans la colonne de gauche sur Pages . Dans la partie Build and deployment , choisir la branche gh-pages puis cliquer sur Save . Quelques instants plus tard, votre site est visible \u00e0 la page https://<username>.github.io/<nomdudepot> 5. Fonctionnement quotidien : routines de modification du site \u2693\ufe0e Ouvrir VSC, lancer mkdocs serve . Ouvrir la page 127.0.0.1:8000 dans son navigateur. Dans VSC, r\u00e9diger ses documents en Markdown, faire un Ctrl-S pour v\u00e9rifier en local les changements sur le site. Pour valider les changements et les rendre visibles sur GitHub , aller dans la partie Contr\u00f4le du code-source de VSC, sur le bandeau lat\u00e9ral gauche. Les fichiers modifi\u00e9s apparaissent. \u00c9crire quelques mots pour d\u00e9crire les changements puis cliquer sur Validation . Cliquer ensuite sur Synchroniser les modifications .","title":"Cr\u00e9er et h\u00e9berger son propre site"},{"location":"Tutoriel/tutoriel/#creer-et-heberger-son-propre-site","text":"","title":"Cr\u00e9er et h\u00e9berger son propre site"},{"location":"Tutoriel/tutoriel/#1-preparation-de-linstallation","text":"","title":"1. Pr\u00e9paration de l'installation"},{"location":"Tutoriel/tutoriel/#11-les-pre-requis","text":"Pr\u00e9-requis logiciels et packages Python Les logiciels suivants sont n\u00e9cessaires : Git VisualStudioCode (ou son \u00e9quivalent libre VSCodium ) Une version r\u00e9cente de Python doit \u00e9galement \u00eatre install\u00e9e. Les packages Python mkdocs-material , mkdocs-macros-plugin , mkdocs-awesome-pages-plugin , mkdocs-git-revision-date-localized-plugin doivent ensuite \u00eatre install\u00e9s, par exemple par les commandes : pip install mkdocs - material mkdocs - macros - plugin mkdocs - awesome - pages - plugin mkdocs - git - revision - date - localized - plugin","title":"1.1. Les pr\u00e9-requis"},{"location":"Tutoriel/tutoriel/#12-hebergement-des-pages","text":"Dans nos exemples, les pages sont h\u00e9berg\u00e9es chez GitHub , chez qui la cr\u00e9ation d'un compte est donc n\u00e9cessaire. Toutefois, une alternative libre existe et propose un service \u00e9quivalent : GitLab :","title":"1.2. H\u00e9bergement des pages"},{"location":"Tutoriel/tutoriel/#2-creation-dun-nouveau-depot","text":"La m\u00e9thode pr\u00e9sent\u00e9e ci-dessous va consister \u00e0 cloner ( forker ) un d\u00e9p\u00f4t d\u00e9j\u00e0 existant, contenant la structure minimale d'un site en MkDocs. Ce site minimal est visible \u00e0 l'adresse https://nsi-mauriac.github.io/mkdocs-modele/ .","title":"2. Cr\u00e9ation d'un nouveau d\u00e9p\u00f4t"},{"location":"Tutoriel/tutoriel/#21-sur-githubcom-fork-du-site-modele","text":"Connectez-vous sur GitHub . Allez \u00e0 l'adresse https://github.com/NSI-Mauriac/mkdocs-modele et cliquer sur le bouton Fork en haut \u00e0 droite. Choisissez un nouveau nom pour votre d\u00e9p\u00f4t (votre repository ).","title":"2.1 Sur GitHub.com : fork du site mod\u00e8le"},{"location":"Tutoriel/tutoriel/#22-sur-votre-ordinateur-clonage-de-votre-depot","text":"Sur la page d'accueil de votre d\u00e9p\u00f4t GitHub, cliquez sur le bouton vert Code et copiez l'adresse affich\u00e9e, qui doit ressembler \u00e0 https://github.com/<username>/<nomdud\u00e9pot>.git . Sur votre ordinateur, ouvrez un Terminal et tapez la commande git clone https://github.com/<username>/<nomdud\u00e9pot>.git (vous pouvez y coller votre adresse par Ctrl-Maj-V ). Cette commande va permettre de rapatrier sur votre disque dur votre d\u00e9p\u00f4t, pour l'instant uniquement pr\u00e9sent sur les serveurs de GitHub.","title":"2.2 Sur votre ordinateur : clonage de votre d\u00e9p\u00f4t"},{"location":"Tutoriel/tutoriel/#3-visualisation-du-site-en-local","text":"Ouvrez dans VisualStudioCode le dossier de votre d\u00e9p\u00f4t. Dans Terminal, cliquez sur Nouveau terminal pour faire appara\u00eetre un nouveau terminal Dans ce terminal, placez vous dans le r\u00e9pertoire de votre d\u00e9p\u00f4t. Tapez la commande mkdocs serve . Un serveur se lance et votre page devient normalement visible dans votre navigateur \u00e0 l'adresse http://127.0.0.1:8000/ .","title":"3. Visualisation du site en local"},{"location":"Tutoriel/tutoriel/#4-hebergement-du-site-sur-les-serveurs-de-github-activation-des-github-pages","text":"Toujours en local, dans un Terminal de VSC, tapez la commande mkdocs gh-deploy . Cette commande, qui ne sera r\u00e9alis\u00e9e qu'une seule fois, permet de g\u00e9n\u00e9rer toute l'architecture de votre site pour son d\u00e9ploiement sur les pages de GitHub . Elle sera faite automatiquement par la suite sur les serveurs de GitHub \u00e0 chaque modification de vos pages. Connectez-vous sur GitHub et allez sur la page d'accuil de votre d\u00e9p\u00f4t. Cliquez sur Settings , puis dans la colonne de gauche sur Pages . Dans la partie Build and deployment , choisir la branche gh-pages puis cliquer sur Save . Quelques instants plus tard, votre site est visible \u00e0 la page https://<username>.github.io/<nomdudepot>","title":"4. H\u00e9bergement du site sur les serveurs de GitHub: activation des GitHub Pages"},{"location":"Tutoriel/tutoriel/#5-fonctionnement-quotidien-routines-de-modification-du-site","text":"Ouvrir VSC, lancer mkdocs serve . Ouvrir la page 127.0.0.1:8000 dans son navigateur. Dans VSC, r\u00e9diger ses documents en Markdown, faire un Ctrl-S pour v\u00e9rifier en local les changements sur le site. Pour valider les changements et les rendre visibles sur GitHub , aller dans la partie Contr\u00f4le du code-source de VSC, sur le bandeau lat\u00e9ral gauche. Les fichiers modifi\u00e9s apparaissent. \u00c9crire quelques mots pour d\u00e9crire les changements puis cliquer sur Validation . Cliquer ensuite sur Synchroniser les modifications .","title":"5. Fonctionnement quotidien : routines de modification du site"}]}